var t="1.0.0";class e{static isNodeEnvironment(){return"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)}static getGlobal(){return this.isNodeEnvironment()?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:this.fallbackGlobalObject}}e.fallbackGlobalObject={};class i{static calculateRotatedRectCoordinates({x:t,y:e,width:i,height:a,degree:o=0}){let n,c,r,s;if(o){const l=t+i/2,d=e+a/2;n=this.calculateRotationCoordinate({x:t,y:e,cx:l,cy:d,degree:o}),c=this.calculateRotationCoordinate({x:t+i,y:e,cx:l,cy:d,degree:o}),r=this.calculateRotationCoordinate({x:t+i,y:e+a,cx:l,cy:d,degree:o}),s=this.calculateRotationCoordinate({x:t,y:e+a,cx:l,cy:d,degree:o})}else n={x:t,y:e},c={x:t+i,y:e},r={x:t+i,y:e+a},s={x:t,y:e+a};return{topleft:n,topright:c,bottomright:r,bottomleft:s}}static calculateRotationCoordinate({x:t,y:e,cx:i=0,cy:a=0,degree:o=0}){const n=o*(Math.PI/180),c=Math.sin(n),r=Math.cos(n);return{x:r*(t-i)-c*(e-a)+i,y:c*(t-i)+r*(e-a)+a}}static calculateCenterCoordinate(...t){const e=t.reduce((t,{x:e,y:i})=>(t.x+=e,t.y+=i,t),{x:0,y:0});return e.x/=t.length,e.y/=t.length,e}static calculateAngleBetweenCoordinates(t,e){return 180*Math.atan2(e.y-t.y,e.x-t.x)/Math.PI}static calculateFitDimensions({objectFit:t,intrinsicWidth:e,intrinsicHeight:i,intrinsicTop:a=0,intrinsicLeft:o=0,actualWidth:n,actualHeight:c}){let r=a,s=o,l=e,d=i;if("contain"===t||"cover"===t||"scale-down"===t){const h=e/n,g=i/c,u="contain"===t||"scale-down"===t?Math.min(h,g):Math.max(h,g);r=a+(i-c*u)/2,s=o+(e-n*u)/2,l=n*u,d=c*u}return{top:r,left:s,width:l,height:d}}static getMediaDimensions(t){return t instanceof HTMLImageElement?{width:t.naturalWidth,height:t.naturalHeight}:t instanceof HTMLVideoElement?{width:t.videoWidth,height:t.videoHeight}:{width:t.width,height:t.height}}static isMediaLoaded(t){return t instanceof HTMLImageElement&&t.complete||t instanceof HTMLVideoElement&&4===t.readyState}static drawPoint(t,{x:e,y:i,r:a=3,color:o="aqua"}){const n=t.getContext("2d");n.beginPath(),n.arc(e,i,a,0,2*Math.PI),n.fillStyle=o,n.fill()}static drawCenterPoint(t,{points:e,r:i=3,color:a="aqua"}){const{x:o,y:n}=this.calculateCenterCoordinate(...e);this.drawPoint(t,{x:o,y:n,r:i,color:a})}static drawRect(t,{x:e,y:i,width:a,height:o,degree:n=0,lineWidth:c=2,color:r="aqua"}){const{topleft:s,topright:l,bottomright:d,bottomleft:h}=this.calculateRotatedRectCoordinates({x:e,y:i,width:a,height:o,degree:n}),g=t.getContext("2d");g.beginPath(),g.moveTo(s.x,s.y),g.lineTo(l.x,l.y),g.lineTo(d.x,d.y),g.lineTo(h.x,h.y),g.closePath(),g.lineWidth=c,g.strokeStyle=r,g.stroke()}static flipHorizontal(t){const e=t.getContext("2d"),i=e.getImageData(0,0,t.width,t.height);for(let t=0;t<i.height;t++)for(let e=0;e<i.width/2;e++){const a=4*t*i.width+4*e,o=4*(t+1)*i.width-4*(e+1);for(let t=0;t<4;t++){let e=i.data[a+t];i.data[a+t]=i.data[o+t],i.data[o+t]=e}}e.putImageData(i,0,0,0,0,i.width,i.height)}}class a{static isAsync(t){return t&&t.constructor&&t.constructor===Object.getPrototypeOf((async function(){})).constructor}}class o{static isAndroid(){return/Android/i.test(navigator.userAgent)}static isIOS(){return/iPhone|iPad|iPod/i.test(navigator.userAgent)}static isMobile(){return this.isAndroid()||this.isIOS()}}export{o as Browser,i as Geometry,e as Misc,a as Types,t as version};
